paths:
  /users/:
    get:                 
      tags:               
        - User            
      summary: Get all users
      security: []  # No security
      produces:
      - text/plain
      responses:          
        200:
          description: Success Message
    post:
      tags:
        - User
      summary: Create new user
      security: [] # No security
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: user CREATED success
        "400":
          description: Bad request
        "404":
          description: id not found
  /users/{id}:
    get:
      tags:
      - User
      summary: Get one user
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad request
        "404":
          description: id not found
    put:
      tags:
      - User
      summary: Update user
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string      
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: user PUT success
        "400":
          description: Bad request
        "404":
          description: id not found
    delete:
      tags:
      - User
      summary: Delete user
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: user DELETED success
        "400":
          description: Bad request
        "404":
          description: id not found
  /publicacao/:
    get:                 
      tags:               
        - Publicacao            
      summary: Get all publicacao
      security: []  # No security
      produces:
      - text/plain
      responses:          
        200:
          description: Success Message
    post:
      tags:
        - Publicacao
      summary: Create publicacao
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publicacao'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                description: publicacao CREATED success
        "400":
          description: Bad request
        "404":
          description: id not found
  /publicacao/{id}:
    get:
      tags:
      - Publicacao
      summary: Get all publicacao of one specific user
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publicacao'
        "400":
          description: Bad request
        "404":
          description: id not found
    put:
      tags:
      - Publicacao
      summary: Update one Publicacao
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publicacao'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Publicacao PUT success
        "400":
          description: Bad request
        "404":
          description: id not found
    delete:
      tags:
      - Publicacao
      summary: Delete publicacao
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Publicacao DELETED success
        "400":
          description: Bad request
        "404":
          description: id not found
  /venda/:
    get:                 
      tags:               
        - Venda            
      summary: Get all Venda
      security: []  # No security      
      produces:
      - text/plain
      responses:          
        200:
          description: Success Message
    post:
      tags:
        - Venda
      summary: Create Venda
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venda'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                description: Venda CREATED success
        "400":
          description: Bad request
        "404":
          description: id not found
  /venda/{id}:
    get:
      tags:
      - Venda
      summary: Get one venda
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venda'
        "400":
          description: Bad request
        "404":
          description: id not found
    put:
      tags:
      - Venda
      summary: Update one venda
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venda'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Venda PUT success
        "400":
          description: Bad request
        "404":
          description: id not found
    delete:
      tags:
      - Venda
      summary: Delete venda
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Venda DELETED success
        "400":
          description: Bad request
        "404":
          description: id not found
components:
  schemas:
    User:
      title: User
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        admin:
          type: boolean
        apiKey:
          type: string
      additionalProperties: false
    Publicacao:
      title: Publicacao
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
      additionalProperties: false
    Venda:
      title: Venda
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        quantity:
          type: integer
          format: int64
        price:
          type: integer
          format: int64
        contact:
          type: string
      additionalProperties: false      
        
  